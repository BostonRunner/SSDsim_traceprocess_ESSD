apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: noisy
  namespace: fio-lab
spec:
  serviceName: "noisy"
  replicas: 6
  selector:
    matchLabels: { app: noisy }
  template:
    metadata:
      labels: { app: noisy }
    spec:
      terminationGracePeriodSeconds: 10
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector: { matchLabels: { app: noisy } }
      containers:
      - name: fio
        image: xridge/fio:latest
        imagePullPolicy: IfNotPresent
        env:
        - {name: RUNTIME, value: "120"}
        - {name: IO_SIZE, value: "8g"}
        - {name: FILE_SIZE, value: "10g"}
        - {name: BS, value: "4k"}
        - {name: IODEPTH, value: "64"}
        command: ["sh","-c"]
        args:
          - |
            set -e
            fio --name=hotwrite --filename=/data/testfile --size=${FILE_SIZE} --io_size=${IO_SIZE}                 --time_based --runtime=${RUNTIME} --ioengine=libaio --direct=1                 --rw=randwrite --bs=${BS} --iodepth=${IODEPTH}                 --group_reporting --output=/results/fio.json --output-format=json
            touch /results/DONE
            sleep infinity
        volumeMounts:
        - { name: data, mountPath: /data }
        - { name: results, mountPath: /results }
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
      volumes:
      - name: results
        emptyDir: {}
  volumeClaimTemplates:
  - metadata: { name: data, labels: { app: noisy } }
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: ceph-rbd-lab-s1
      resources: { requests: { storage: 10Gi } }
